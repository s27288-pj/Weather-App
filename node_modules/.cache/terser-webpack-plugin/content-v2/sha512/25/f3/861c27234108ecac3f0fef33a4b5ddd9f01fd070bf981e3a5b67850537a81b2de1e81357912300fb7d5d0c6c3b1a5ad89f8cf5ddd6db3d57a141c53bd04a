{"code":"(this[\"webpackJsonpweather-app\"]=this[\"webpackJsonpweather-app\"]||[]).push([[0],[function(t,e){let n=!1;window.onload=function(){\"true\"===localStorage.getItem(\"darkMode\")&&(document.body.classList.toggle(\"dark-mode\"),n=!n,localStorage.setItem(\"darkMode\",n))};const o=Object({NODE_ENV:\"production\",PUBLIC_URL:\"\",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).REACT_APP_OPENWEATHERMAPAPI,a=Object({NODE_ENV:\"production\",PUBLIC_URL:\"\",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).REACT_APP_MAPBOXTOKEN;async function c(t){const e=await fetch(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\".concat(t,\".json?access_token=\").concat(a));return(await e.json()).features.map((t=>({place_name:t.place_name,coordinates:t.center})))}async function i(t,e){const[n,o]=t;try{const t=await r(o,n),a=await s(o,n);d(t),l(a);document.getElementById(\"location-input\").value=\"\".concat(e);document.getElementById(\"suggestions-list\").innerHTML=\"\"}catch(a){console.error(\"Error fetching weather data:\",a)}}async function r(t,e){const n=await fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(t,\"&lon=\").concat(e,\"&appid=\").concat(o,\"&units=metric\"));return await n.json()}async function s(t,e){const n=await fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(t,\"&lon=\").concat(e,\"&appid=\").concat(o,\"&units=metric\"));return await n.json()}function d(t){document.getElementById(\"current-weather\").innerHTML=\"\\n    <p>Temperature: \".concat(t.main.temp,\"\\xb0C</p>\\n    <p>Feels Like: \").concat(t.main.feels_like,\"\\xb0C</p>\\n    <p>Pressure: \").concat(t.main.pressure,\" hPa</p>\\n    <p>Humidity: \").concat(t.main.humidity,\"%</p>\\n  \");document.getElementById(\"current-weather-title\").style.display=\"block\"}function l(t){const e=document.getElementById(\"forecast-data\");e.innerHTML=\"\",t.list.forEach((t=>{const n=new Date(1e3*t.dt),o=n.getDate().toString().padStart(2,\"0\"),a=(n.getMonth()+1).toString().padStart(2,\"0\"),c=n.getFullYear(),i=n.getHours().toString().padStart(2,\"0\"),r=n.getMinutes().toString().padStart(2,\"0\"),s=\"\".concat(o,\"/\").concat(a,\"/\").concat(c),d=\"\".concat(i,\":\").concat(r),l=\"\\n      <tr>\\n        <td>\".concat(s,\" \").concat(d,\"</td>\\n        <td>\").concat(t.main.temp,\"\\xb0C</td>\\n        <td>\").concat(t.main.feels_like,\"\\xb0C</td>\\n        <td>\").concat(t.main.pressure,\" hPa</td>\\n        <td>\").concat(t.main.humidity,\"%</td>\\n      </tr>\\n    \");e.innerHTML+=l}));const n=document.getElementById(\"forecast-title\"),o=document.getElementById(\"forecast-table\");n.style.display=\"block\",o.style.display=\"table\"}function u(){const t=document.getElementById(\"location-input\").value;t.length>0&&c(t).then((t=>{if(t.length>0){i(t[0].coordinates,t[0].place_name)}})).catch((t=>{console.error(\"Error fetching location suggestions:\",t)}))}setTimeout((function(){if(!/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)){document.getElementById(\"popup\").style.display=\"block\"}}),5e3);const p=[\"ArrowUp\",\"ArrowUp\",\"ArrowDown\",\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\",\"ArrowLeft\",\"ArrowRight\",\"b\",\"a\"];let m=0;const g=document.getElementById(\"location-input\");g.addEventListener(\"input\",(async function(){const t=document.getElementById(\"location-input\").value;if(t.length>0){!function(t){const e=document.getElementById(\"suggestions-list\");e.innerHTML=\"\",t.forEach((t=>{const n=document.createElement(\"li\");n.textContent=t.place_name,n.onclick=()=>i(t.coordinates,t.place_name),e.appendChild(n)}))}(await c(t))}else{document.getElementById(\"suggestions-list\").innerHTML=\"\"}}));document.querySelector(\"button\").addEventListener(\"click\",u),g.addEventListener(\"keypress\",(function(t){\"Enter\"===t.key&&u()})),document.addEventListener(\"keydown\",(function(t){\"Escape\"===t.key?m=0:function(t){t.key===p[m]?(m++,m===p.length&&(alert(\"Konami code activated! \\ud83c\\udf89\"),m=0)):m=0}(t)}))}],[[0,1]]]);","name":"static/js/main.f52ee053.chunk.js","map":{"version":3,"names":["this","push","module","exports","isDarkMode","window","onload","localStorage","getItem","document","body","classList","toggle","setItem","apiKey","Object","NODE_ENV","PUBLIC_URL","WDS_SOCKET_HOST","undefined","WDS_SOCKET_PATH","WDS_SOCKET_PORT","FAST_REFRESH","REACT_APP_OPENWEATHERMAPAPI","mapboxToken","REACT_APP_MAPBOXTOKEN","async","getLocationSuggestions","query","response","fetch","concat","json","features","map","feature","place_name","coordinates","center","selectLocation","placeName","longitude","latitude","weatherData","getWeatherData","forecastData","getForecastData","displayCurrentWeather","displayForecastData","getElementById","value","innerHTML","error","console","weather","main","temp","feels_like","pressure","humidity","style","display","forecast","forecastDataElement","list","forEach","item","dateTime","Date","dt","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","formattedDate","formattedTime","row","forecastTitle","forecastTable","searchWeatherOnClick","locationInput","length","then","suggestions","catch","setTimeout","test","navigator","userAgent","konamiCode","konamiCodeIndex","inputField","addEventListener","suggestionsList","suggestion","listItem","createElement","textContent","onclick","appendChild","displayLocationSuggestions","querySelector","event","key","alert","checkKonamiCode"],"sources":["static/js/main.f52ee053.chunk.js"],"mappings":"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"},"input":"(this[\"webpackJsonpweather-app\"] = this[\"webpackJsonpweather-app\"] || []).push([[0],[\n/* 0 */\n/***/ (function(module, exports) {\n\nlet isDarkMode=false;function toggleMode(){const body=document.body;body.classList.toggle('dark-mode');isDarkMode=!isDarkMode;// Save user preference to localStorage\nlocalStorage.setItem('darkMode',isDarkMode);}// Check user preference in localStorage on page load\nwindow.onload=function(){const userPrefersDark=localStorage.getItem('darkMode')==='true';if(userPrefersDark){toggleMode();}};const apiKey=Object({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"\",\"WDS_SOCKET_HOST\":undefined,\"WDS_SOCKET_PATH\":undefined,\"WDS_SOCKET_PORT\":undefined,\"FAST_REFRESH\":true}).REACT_APP_OPENWEATHERMAPAPI;const mapboxToken=Object({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"\",\"WDS_SOCKET_HOST\":undefined,\"WDS_SOCKET_PATH\":undefined,\"WDS_SOCKET_PORT\":undefined,\"FAST_REFRESH\":true}).REACT_APP_MAPBOXTOKEN;// Function to fetch location suggestions from MapBox API\nasync function getLocationSuggestions(query){const response=await fetch(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\".concat(query,\".json?access_token=\").concat(mapboxToken));const data=await response.json();return data.features.map(feature=>{return{place_name:feature.place_name,coordinates:feature.center};});}// Function to display location suggestions\nfunction displayLocationSuggestions(suggestions){const suggestionsList=document.getElementById('suggestions-list');suggestionsList.innerHTML='';suggestions.forEach(suggestion=>{const listItem=document.createElement('li');listItem.textContent=suggestion.place_name;listItem.onclick=()=>selectLocation(suggestion.coordinates,suggestion.place_name);suggestionsList.appendChild(listItem);});}// Function to handle the selection of a location from suggestions\nasync function selectLocation(coordinates,placeName){const[longitude,latitude]=coordinates;// Correctly extract latitude and longitude\ntry{const weatherData=await getWeatherData(latitude,longitude);const forecastData=await getForecastData(latitude,longitude);displayCurrentWeather(weatherData);displayForecastData(forecastData);// Set selected suggestion to the input box\nconst locationInput=document.getElementById('location-input');locationInput.value=\"\".concat(placeName);// Clear suggestions list from the DOM\nconst suggestionsList=document.getElementById('suggestions-list');suggestionsList.innerHTML='';}catch(error){console.error('Error fetching weather data:',error);// Handle error - for example, display an error message to the user\n}}// Function to handle user input for location autocomplete\nasync function handleInput(){const locationInput=document.getElementById('location-input').value;if(locationInput.length>0){const suggestions=await getLocationSuggestions(locationInput);displayLocationSuggestions(suggestions);}else{const suggestionsList=document.getElementById('suggestions-list');suggestionsList.innerHTML='';}}// Function to fetch weather data from OpenWeatherMap API\nasync function getWeatherData(latitude,longitude){const response=await fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(latitude,\"&lon=\").concat(longitude,\"&appid=\").concat(apiKey,\"&units=metric\"));const data=await response.json();return data;}// Function to fetch forecast data from OpenWeatherMap API\nasync function getForecastData(latitude,longitude){const response=await fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(latitude,\"&lon=\").concat(longitude,\"&appid=\").concat(apiKey,\"&units=metric\"));const data=await response.json();return data;}// Function to display current weather\nfunction displayCurrentWeather(weather){const currentWeatherElement=document.getElementById('current-weather');currentWeatherElement.innerHTML=\"\\n    <p>Temperature: \".concat(weather.main.temp,\"\\xB0C</p>\\n    <p>Feels Like: \").concat(weather.main.feels_like,\"\\xB0C</p>\\n    <p>Pressure: \").concat(weather.main.pressure,\" hPa</p>\\n    <p>Humidity: \").concat(weather.main.humidity,\"%</p>\\n  \");// Display the current weather title\nconst currentWeatherTitle=document.getElementById('current-weather-title');currentWeatherTitle.style.display='block';}// Function to display forecast data in a table\nfunction displayForecastData(forecast){const forecastDataElement=document.getElementById('forecast-data');forecastDataElement.innerHTML='';forecast.list.forEach(item=>{const dateTime=new Date(item.dt*1000);const day=dateTime.getDate().toString().padStart(2,'0');// Get day (two digits)\nconst month=(dateTime.getMonth()+1).toString().padStart(2,'0');// Get month (two digits)\nconst year=dateTime.getFullYear();// Get year\nconst hours=dateTime.getHours().toString().padStart(2,'0');// Get hours (24-hour format)\nconst minutes=dateTime.getMinutes().toString().padStart(2,'0');// Get minutes (two digits)\nconst formattedDate=\"\".concat(day,\"/\").concat(month,\"/\").concat(year);const formattedTime=\"\".concat(hours,\":\").concat(minutes);const row=\"\\n      <tr>\\n        <td>\".concat(formattedDate,\" \").concat(formattedTime,\"</td>\\n        <td>\").concat(item.main.temp,\"\\xB0C</td>\\n        <td>\").concat(item.main.feels_like,\"\\xB0C</td>\\n        <td>\").concat(item.main.pressure,\" hPa</td>\\n        <td>\").concat(item.main.humidity,\"%</td>\\n      </tr>\\n    \");forecastDataElement.innerHTML+=row;});// Display the forecast title and table\nconst forecastTitle=document.getElementById('forecast-title');const forecastTable=document.getElementById('forecast-table');forecastTitle.style.display='block';forecastTable.style.display='table';}// Function to handle the search and retrieve weather data\nasync function searchWeather(){const locationInput=document.getElementById('location-input').value;// Fetch coordinates using MapBox geocoding API\nconst mapboxResponse=await fetch(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\".concat(locationInput,\".json?access_token=\").concat(mapboxToken));const mapboxData=await mapboxResponse.json();const coordinates=mapboxData.features[0].center;const latitude=coordinates[1];const longitude=coordinates[0];const weatherData=await getWeatherData(\"\".concat(latitude,\",\").concat(longitude));const forecastData=await getForecastData(\"\".concat(latitude,\",\").concat(longitude));displayCurrentWeather(weatherData);displayForecastData(forecastData);}// Function to handle search when button is clicked or Enter is pressed\nfunction searchWeatherOnClick(){const locationInput=document.getElementById('location-input').value;if(locationInput.length>0){// Fetch suggestions from MapBox API\ngetLocationSuggestions(locationInput).then(suggestions=>{if(suggestions.length>0){const coordinates=suggestions[0].coordinates;const placeName=suggestions[0].place_name;selectLocation(coordinates,placeName);}}).catch(error=>{console.error('Error fetching location suggestions:',error);// Handle error - for example, display an error message to the user\n});}}function displayPopupOnDesktop(){const isMobile=/iPhone|iPad|iPod|Android/i.test(navigator.userAgent);if(!isMobile){const popup=document.getElementById('popup');popup.style.display='block';}}// Function to close the popup\nfunction closePopup(){const popup=document.getElementById('popup');popup.style.display='none';}// Set timeout to display the popup after 20 seconds for desktop devices\nsetTimeout(displayPopupOnDesktop,5000);// 20 seconds in milliseconds \n// TODO: Change to 20 seconds\nconst konamiCode=['ArrowUp','ArrowUp','ArrowDown','ArrowDown','ArrowLeft','ArrowRight','ArrowLeft','ArrowRight','b','a'];let konamiCodeIndex=0;function checkKonamiCode(event){const key=event.key;const requiredKey=konamiCode[konamiCodeIndex];if(key===requiredKey){konamiCodeIndex++;if(konamiCodeIndex===konamiCode.length){// Konami code successfully entered, perform action (e.g., show an Easter egg)\nalert('Konami code activated! 🎉');konamiCodeIndex=0;// Reset index for next entry\n}}else{konamiCodeIndex=0;// Reset index if wrong key is pressed\n}}// Attach an event listener to the input field for real-time suggestions\nconst inputField=document.getElementById('location-input');inputField.addEventListener('input',handleInput);const searchButton=document.querySelector('button');searchButton.addEventListener('click',searchWeatherOnClick);// Handle Enter key press\ninputField.addEventListener('keypress',function(event){if(event.key==='Enter'){searchWeatherOnClick();}});// Event listener for key presses\ndocument.addEventListener('keydown',function(event){if(event.key==='Escape'){konamiCodeIndex=0;// Reset index if Escape key is pressed\n}else{checkKonamiCode(event);}});\n\n/***/ })\n],[[0,1]]]);","inputSourceMap":{"version":3,"sources":["/home/runner/work/Weather-App/Weather-App/src/index.js"],"names":["isDarkMode","toggleMode","body","document","classList","toggle","localStorage","setItem","window","onload","userPrefersDark","getItem","apiKey","process","REACT_APP_OPENWEATHERMAPAPI","mapboxToken","REACT_APP_MAPBOXTOKEN","getLocationSuggestions","query","response","fetch","concat","data","json","features","map","feature","place_name","coordinates","center","displayLocationSuggestions","suggestions","suggestionsList","getElementById","innerHTML","forEach","suggestion","listItem","createElement","textContent","onclick","selectLocation","appendChild","placeName","longitude","latitude","weatherData","getWeatherData","forecastData","getForecastData","displayCurrentWeather","displayForecastData","locationInput","value","error","console","handleInput","length","weather","currentWeatherElement","main","temp","feels_like","pressure","humidity","currentWeatherTitle","style","display","forecast","forecastDataElement","list","item","dateTime","Date","dt","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","formattedDate","formattedTime","row","forecastTitle","forecastTable","searchWeather","mapboxResponse","mapboxData","searchWeatherOnClick","then","catch","displayPopupOnDesktop","isMobile","test","navigator","userAgent","popup","closePopup","setTimeout","konamiCode","konamiCodeIndex","checkKonamiCode","event","key","requiredKey","alert","inputField","addEventListener","searchButton","querySelector"],"mappings":"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","file":"x","sourcesContent":["let isDarkMode = false;\n\nfunction toggleMode() {\n  const body = document.body;\n  body.classList.toggle('dark-mode');\n  isDarkMode = !isDarkMode;\n\n  // Save user preference to localStorage\n  localStorage.setItem('darkMode', isDarkMode);\n}\n\n// Check user preference in localStorage on page load\nwindow.onload = function () {\n  const userPrefersDark = localStorage.getItem('darkMode') === 'true';\n\n  if (userPrefersDark) {\n    toggleMode();\n  }\n};\n\nconst apiKey = process.env.REACT_APP_OPENWEATHERMAPAPI;\nconst mapboxToken = process.env.REACT_APP_MAPBOXTOKEN;\n\n// Function to fetch location suggestions from MapBox API\nasync function getLocationSuggestions(query) {\n  const response = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${query}.json?access_token=${mapboxToken}`);\n  const data = await response.json();\n  return data.features.map(feature => {\n    return {\n      place_name: feature.place_name,\n      coordinates: feature.center\n    };\n  });\n}\n\n// Function to display location suggestions\nfunction displayLocationSuggestions(suggestions) {\n  const suggestionsList = document.getElementById('suggestions-list');\n  suggestionsList.innerHTML = '';\n\n  suggestions.forEach(suggestion => {\n    const listItem = document.createElement('li');\n    listItem.textContent = suggestion.place_name;\n    listItem.onclick = () => selectLocation(suggestion.coordinates, suggestion.place_name);\n    suggestionsList.appendChild(listItem);\n  });\n}\n\n// Function to handle the selection of a location from suggestions\nasync function selectLocation(coordinates, placeName) {\n  const [longitude, latitude] = coordinates; // Correctly extract latitude and longitude\n\n  try {\n    const weatherData = await getWeatherData(latitude, longitude);\n    const forecastData = await getForecastData(latitude, longitude);\n  \n    displayCurrentWeather(weatherData);\n    displayForecastData(forecastData);\n\n    // Set selected suggestion to the input box\n    const locationInput = document.getElementById('location-input');\n    locationInput.value = `${placeName}`;\n\n    // Clear suggestions list from the DOM\n    const suggestionsList = document.getElementById('suggestions-list');\n    suggestionsList.innerHTML = '';\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n    // Handle error - for example, display an error message to the user\n  }\n}\n\n// Function to handle user input for location autocomplete\nasync function handleInput() {\n  const locationInput = document.getElementById('location-input').value;\n  if (locationInput.length > 0) {\n    const suggestions = await getLocationSuggestions(locationInput);\n    displayLocationSuggestions(suggestions);\n  } else {\n    const suggestionsList = document.getElementById('suggestions-list');\n    suggestionsList.innerHTML = '';\n  }\n}\n\n// Function to fetch weather data from OpenWeatherMap API\nasync function getWeatherData(latitude, longitude) {\n  const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`);\n  const data = await response.json();\n  return data;\n}\n\n// Function to fetch forecast data from OpenWeatherMap API\nasync function getForecastData(latitude, longitude) {\n  const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`);\n  const data = await response.json();\n  return data;\n}\n\n// Function to display current weather\nfunction displayCurrentWeather(weather) {\n  const currentWeatherElement = document.getElementById('current-weather');\n  currentWeatherElement.innerHTML = `\n    <p>Temperature: ${weather.main.temp}°C</p>\n    <p>Feels Like: ${weather.main.feels_like}°C</p>\n    <p>Pressure: ${weather.main.pressure} hPa</p>\n    <p>Humidity: ${weather.main.humidity}%</p>\n  `;\n\n  // Display the current weather title\n  const currentWeatherTitle = document.getElementById('current-weather-title');\n  currentWeatherTitle.style.display = 'block';\n}\n\n// Function to display forecast data in a table\nfunction displayForecastData(forecast) {\n  const forecastDataElement = document.getElementById('forecast-data');\n  forecastDataElement.innerHTML = '';\n\n  forecast.list.forEach(item => {\n    const dateTime = new Date(item.dt * 1000);\n    const day = dateTime.getDate().toString().padStart(2, '0'); // Get day (two digits)\n    const month = (dateTime.getMonth() + 1).toString().padStart(2, '0'); // Get month (two digits)\n    const year = dateTime.getFullYear(); // Get year\n    const hours = dateTime.getHours().toString().padStart(2, '0'); // Get hours (24-hour format)\n    const minutes = dateTime.getMinutes().toString().padStart(2, '0'); // Get minutes (two digits)\n    \n    const formattedDate = `${day}/${month}/${year}`;\n    const formattedTime = `${hours}:${minutes}`;\n    \n    const row = `\n      <tr>\n        <td>${formattedDate} ${formattedTime}</td>\n        <td>${item.main.temp}°C</td>\n        <td>${item.main.feels_like}°C</td>\n        <td>${item.main.pressure} hPa</td>\n        <td>${item.main.humidity}%</td>\n      </tr>\n    `;\n    forecastDataElement.innerHTML += row;\n  });\n  // Display the forecast title and table\n  const forecastTitle = document.getElementById('forecast-title');\n  const forecastTable = document.getElementById('forecast-table');\n  forecastTitle.style.display = 'block';\n  forecastTable.style.display = 'table';\n}\n\n// Function to handle the search and retrieve weather data\nasync function searchWeather() {\n  const locationInput = document.getElementById('location-input').value;\n  \n  // Fetch coordinates using MapBox geocoding API\n  const mapboxResponse = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${locationInput}.json?access_token=${mapboxToken}`);\n  const mapboxData = await mapboxResponse.json();\n  const coordinates = mapboxData.features[0].center;\n\n  const latitude = coordinates[1];\n  const longitude = coordinates[0];\n  \n  const weatherData = await getWeatherData(`${latitude},${longitude}`);\n  const forecastData = await getForecastData(`${latitude},${longitude}`);\n  \n  displayCurrentWeather(weatherData);\n  displayForecastData(forecastData);\n}\n\n// Function to handle search when button is clicked or Enter is pressed\nfunction searchWeatherOnClick() {\n  const locationInput = document.getElementById('location-input').value;\n\n  if (locationInput.length > 0) {\n    // Fetch suggestions from MapBox API\n    getLocationSuggestions(locationInput)\n      .then(suggestions => {\n        if (suggestions.length > 0) {\n          const coordinates = suggestions[0].coordinates;\n          const placeName = suggestions[0].place_name;\n          selectLocation(coordinates, placeName);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching location suggestions:', error);\n        // Handle error - for example, display an error message to the user\n      });\n  }\n}\n\nfunction displayPopupOnDesktop() {\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n  if (!isMobile) {\n    const popup = document.getElementById('popup');\n    popup.style.display = 'block';\n  }\n}\n\n// Function to close the popup\nfunction closePopup() {\n  const popup = document.getElementById('popup');\n  popup.style.display = 'none';\n}\n\n// Set timeout to display the popup after 20 seconds for desktop devices\nsetTimeout(displayPopupOnDesktop, 5000); // 20 seconds in milliseconds \n// TODO: Change to 20 seconds\n\nconst konamiCode = ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'b', 'a'];\nlet konamiCodeIndex = 0;\n\nfunction checkKonamiCode(event) {\n  const key = event.key;\n  const requiredKey = konamiCode[konamiCodeIndex];\n\n  if (key === requiredKey) {\n    konamiCodeIndex++;\n\n    if (konamiCodeIndex === konamiCode.length) {\n      // Konami code successfully entered, perform action (e.g., show an Easter egg)\n      alert('Konami code activated! 🎉');\n      konamiCodeIndex = 0; // Reset index for next entry\n    }\n  } else {\n    konamiCodeIndex = 0; // Reset index if wrong key is pressed\n  }\n}\n\n// Attach an event listener to the input field for real-time suggestions\nconst inputField = document.getElementById('location-input');\ninputField.addEventListener('input', handleInput);\n\nconst searchButton = document.querySelector('button');\nsearchButton.addEventListener('click', searchWeatherOnClick);\n\n// Handle Enter key press\ninputField.addEventListener('keypress', function(event) {\n  if (event.key === 'Enter') {\n    searchWeatherOnClick();\n  }\n});\n\n// Event listener for key presses\ndocument.addEventListener('keydown', function(event) {\n  if (event.key === 'Escape') {\n    konamiCodeIndex = 0; // Reset index if Escape key is pressed\n  } else {\n    checkKonamiCode(event);\n  }\n});\n"]}}